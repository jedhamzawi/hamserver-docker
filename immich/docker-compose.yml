version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    command: ["start.sh", "immich" ]
    networks:
      - immich_net
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
    env_file:
      - .env
      - ./secrets/secrets.env
    secrets:
      - immich_db_name
      - immich_db_user
      - immich_db_password
    environment:
      DB_DATABASE_NAME_FILE: /run/secrets/immich_db_name
      DB_USERNAME_FILE: /run/secrets/immich_db_user
      DB_PASSWORD_FILE: /run/secrets/immich_db_password
    depends_on:
      - redis
      - database
      - typesense
    restart: always

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    extends:
      file: hwaccel.yml
      service: hwaccel
    command: [ "start.sh", "microservices" ]
    networks:
      - immich_net
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /usr/src/app/.reverse-geocoding-dump
    env_file:
      - .env
      - ./secrets/secrets.env
    secrets:
      - immich_db_name
      - immich_db_user
      - immich_db_password
    environment:
      NODE_ENV: production
      DB_DATABASE_NAME_FILE: /run/secrets/immich_db_name
      DB_USERNAME_FILE: /run/secrets/immich_db_user
      DB_PASSWORD_FILE: /run/secrets/immich_db_password
    depends_on:
      - redis
      - database
      - typesense
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    networks:
      - immich_net
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ${CACHE}/ml-cache:/cache
    env_file:
      - .env
    restart: always

  immich-web:
    container_name: immich_web
    image: ghcr.io/immich-app/immich-web:${IMMICH_VERSION:-release}
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    networks:
      - immich_net
    env_file:
      - .env
      - ./secrets/secrets.env
    restart: always

  typesense:
    container_name: immich_typesense
    image: typesense/typesense:0.24.1
    restart: always
    env_file:
      - ./secrets/secrets.env
    networks:
      - immich_net
    environment:
#      Set in secrets.env
#      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}
      TYPESENSE_DATA_DIR: /data
    logging:
      driver: none
    volumes:
      - ${CACHE}/typesense:/data

  redis:
    container_name: immich_redis
    image: redis:6.2-alpine
    restart: always
    networks:
      - immich_net

  database:
    container_name: immich_postgres
    image: postgres:14-alpine
    networks:
      - immich_net
    secrets:
      - immich_db_name
      - immich_db_user
      - immich_db_password
    environment: 
      POSTGRES_DB_FILE: /run/secrets/immich_db_name
      POSTGRES_USER_FILE: /run/secrets/immich_db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/immich_db_password
    volumes:
      - ${CACHE}/db:/var/lib/postgresql/data
    restart: always

  immich-proxy:
    container_name: immich_proxy
    image: altran1502/immich-proxy:release
    networks:
      - immich_net
      - immich_proxy
    environment:
      # Make sure these values get passed through from the env file
      IMMICH_SERVER_URL: ${IMMICH_SERVER_URL}
      IMMICH_WEB_URL: ${IMMICH_WEB_URL}
    logging:
      driver: none
    depends_on:
      - immich-server
    restart: always

networks:
  immich_net:
    name: immich_net
    driver: bridge
  immich_proxy:
    external: true

secrets:
  immich_db_name:
    file: ./secrets/immich_db_name
  immich_db_user:
    file: ./secrets/immich_db_user
  immich_db_password:
    file: ./secrets/immich_db_password
 
