version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "/bin/server-entrypoint.sh"]
    networks:
      - immich_net
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ./server-entrypoint.sh:/bin/server-entrypoint.sh
    env_file:
      - .env
      - ./secrets/secrets.env
    secrets:
      - immich_db_user
      - immich_db_password
      - immich_db_name
    environment:
      - NODE_ENV=production
      - DB_USERNAME_FILE=/run/secrets/immich_db_user
      - DB_PASSWORD_FILE=/run/secrets/immich_db_password
      - DB_DATABASE_NAME_FILE=/run/secrets/immich_db_name
    depends_on:
      - redis
      - database
    restart: always

  immich-microservices:
    container_name: immich_microservices
    image: altran1502/immich-server:release
    entrypoint: ["/bin/sh", "/bin/micro-entrypoint.sh"]
    networks:
      - immich_net
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /usr/src/app/.reverse-geocoding-dump
      - ./micro-entrypoint.sh:/bin/micro-entrypoint.sh
    env_file:
      - .env
      - ./secrets/secrets.env
    secrets:
      - immich_db_user
      - immich_db_password
      - immich_db_name
    environment:
      - NODE_ENV=production
      - DB_USERNAME_FILE=/run/secrets/immich_db_user
      - DB_PASSWORD_FILE=/run/secrets/immich_db_password
      - DB_DATABASE_NAME_FILE=/run/secrets/immich_db_name
    depends_on:
      - redis
      - database
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    image: altran1502/immich-machine-learning:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    networks:
      - immich_net
    env_file:
      .env
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
    environment:
      - NODE_ENV=production
    depends_on:
      - database
    restart: always

  immich-web:
    container_name: immich_web
    image: altran1502/immich-web:release
    entrypoint: ["/bin/sh", "./entrypoint.sh"]
    networks:
      - immich_net
    env_file:
      - .env
      - ./secrets/secrets.env
    #environment:
      # Rename these values for svelte public interface
      #- PUBLIC_IMMICH_SERVER_URL=${IMMICH_SERVER_URL}
    restart: always

  redis:
    container_name: immich_redis
    image: redis:6.2
    restart: always
    networks:
      - immich_net

  database:
    container_name: immich_postgres
    image: postgres:14
    networks:
      - immich_net
    secrets:
      - immich_db_user
      - immich_db_password
      - immich_db_name
    environment: 
      POSTGRES_USER_FILE: /run/secrets/immich_db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/immich_db_password
      POSTGRES_DB_FILE: /run/secrets/immich_db_name
    volumes:
      - ${CACHE}/db:/var/lib/postgresql/data
    restart: always

  immich-proxy:
    container_name: immich_proxy
    image: altran1502/immich-proxy:release
    networks:
      - immich_net
      - web_proxy
    environment:
      # Make sure these values get passed through from the env file
      - IMMICH_SERVER_URL=${IMMICH_SERVER_URL}
      - IMMICH_WEB_URL=${IMMICH_WEB_URL}
    logging:
      driver: none
    depends_on:
      - immich-server
    restart: always

networks:
  immich_net:
    name: immich_net
    driver: bridge
  web_proxy:
    external: true

secrets:
  immich_db_name:
    file: ./secrets/immich_db_name
  immich_db_user:
    file: ./secrets/immich_db_user
  immich_db_password:
    file: ./secrets/immich_db_password

